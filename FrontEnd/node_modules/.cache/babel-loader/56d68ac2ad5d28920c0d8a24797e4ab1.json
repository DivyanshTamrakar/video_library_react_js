{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github Local Repositries path\\\\video_library_react_js\\\\FrontEnd\\\\src\\\\Context\\\\LoginContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvieder({\n  children\n}) {\n  _s();\n\n  const [login, setlogin] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n\n  async function LoginWithCredential(email, password) {\n    if (email === \"Divyansh\" && password === \"123\") {\n      setlogin(true);\n      localStorage.setItem('isuserlogin', true);\n      navigate((state === null || state === void 0 ? void 0 : state.from) ? state.from : '/');\n      return true;\n    } else {\n      return console.log(\"credentials are wrong\");\n    } //     const body = {\n    //      email :email, \n    //      password : password,\n    //    }\n    //    try{\n    //      let response = await postData(body, `/users/signin`);\n    //      console.log(response)\n    //      if(response['success'] === true){\n    //       setLogin(true);\n    //       console.log(response['user']['uid']);\n    //       localStorage.setItem('userId',response['user']['uid']);\n    //       localStorage.setItem('name',response['user']['name']);\n    //      // navigate(state?.from ? state.from:\"/\");\n    //      toast.success(response.message);\n    //    }\n    //    else{\n    //        toast.error(response.message);\n    //    }\n    //  }catch(e){\n    //      console.error(\"Error in AuhtContext \" , e);\n    //    }\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      LoginWithCredential,\n      setlogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvieder, \"TSMK2lea5FlMVo5ACWz15APSzkE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c = AuthProvieder;\nexport function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvieder\");","map":{"version":3,"sources":["G:/Github Local Repositries path/video_library_react_js/FrontEnd/src/Context/LoginContext.js"],"names":["createContext","useContext","useState","useNavigate","useLocation","AuthContext","AuthProvieder","children","login","setlogin","state","navigate","LoginWithCredential","email","password","localStorage","setItem","from","console","log","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAwC,kBAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEP,OAAO,SAASM,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAYN,WAAW,EAA7B;AACA,QAAMO,QAAQ,GAAIR,WAAW,EAA7B;;AACA,iBAAeS,mBAAf,CAAmCC,KAAnC,EAA0CC,QAA1C,EAAmD;AAE/C,QAAGD,KAAK,KAAK,UAAV,IAAwBC,QAAQ,KAAK,KAAxC,EACA;AACCL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmC,IAAnC;AACDL,MAAAA,QAAQ,CAAC,CAAAD,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEO,IAAP,IAAaP,KAAK,CAACO,IAAnB,GAAwB,GAAzB,CAAR;AACC,aAAO,IAAP;AACA,KAND,MAMK;AACJ,aAAOC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAP;AACA,KAV8C,CAYnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;;AAEJ,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAACX,MAAAA,KAAD;AAAOI,MAAAA,mBAAP;AAA2BH,MAAAA;AAA3B,KAA/B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GA7CeD,a;UAGMF,W,EACAD,W;;;KAJNG,a;AAiDhB,OAAO,SAASc,OAAT,GAAkB;AAAA;;AACtB,SAAOnB,UAAU,CAACI,WAAD,CAAjB;AACF;;IAFee,O","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport {useNavigate,useLocation  } from \"react-router-dom\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvieder({children}){\r\n\r\n    const [login,setlogin] = useState(false);\r\n    const { state } = useLocation();\r\n    const navigate =  useNavigate();\r\n    async function LoginWithCredential(email, password){\r\n\r\n        if(email === \"Divyansh\" && password === \"123\")\r\n        {\r\n         setlogin(true);\r\n         localStorage.setItem('isuserlogin',true);\r\n        navigate(state?.from? state.from:'/')\r\n         return true\r\n        }else{\r\n         return console.log(\"credentials are wrong\");\r\n        }\r\n\r\n    //     const body = {\r\n    //      email :email, \r\n    //      password : password,\r\n    //    }\r\n    //    try{\r\n    //      let response = await postData(body, `/users/signin`);\r\n    //      console.log(response)\r\n    //      if(response['success'] === true){\r\n    //       setLogin(true);\r\n    //       console.log(response['user']['uid']);\r\n    //       localStorage.setItem('userId',response['user']['uid']);\r\n    //       localStorage.setItem('name',response['user']['name']);\r\n    //      // navigate(state?.from ? state.from:\"/\");\r\n    //      toast.success(response.message);\r\n    //    }\r\n    //    else{\r\n    //        toast.error(response.message);\r\n    //    }\r\n    //  }catch(e){\r\n    //      console.error(\"Error in AuhtContext \" , e);\r\n    //    }\r\n       }\r\n\r\n    return (\r\n    <AuthContext.Provider value = {{login,LoginWithCredential,setlogin}}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function useAuth(){\r\n   return useContext(AuthContext);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}