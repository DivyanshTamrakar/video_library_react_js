{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github Local Repositries path\\\\video_library_react_js\\\\FrontEnd\\\\src\\\\Context\\\\PlaylistContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlaylistContext = /*#__PURE__*/createContext();\nexport function PlaylistContextProvider({\n  children\n}) {\n  _s();\n\n  const [modal, setmodal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(PlaylistContext.Provider, {\n    value: {\n      modal,\n      setmodal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlaylistContextProvider, \"xlI2vECOmGgvhoXLBcSgn5lz1gg=\");\n\n_c = PlaylistContextProvider;\nexport function usePlaylist() {\n  _s2();\n\n  return useContext(PlaylistContext);\n}\n\n_s2(usePlaylist, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaylistContextProvider\");","map":{"version":3,"sources":["G:/Github Local Repositries path/video_library_react_js/FrontEnd/src/Context/PlaylistContext.js"],"names":["createContext","useContext","useState","PlaylistContext","PlaylistContextProvider","children","modal","setmodal","usePlaylist"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAAUC,QAAV,QAA0B,OAA1B;;AAGA,OAAO,MAAOC,eAAe,gBAAGH,aAAa,EAAtC;AAIP,OAAO,SAASI,uBAAT,CAAiC;AAACC,EAAAA;AAAD,CAAjC,EAA4C;AAAA;;AACjD,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,KAAD,CAAjC;AAEC,sBACC,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAG;AAACI,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAlC;AAAA,cACCF;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAMF;;GATeD,uB;;KAAAA,uB;AAYhB,OAAO,SAASI,WAAT,GAAsB;AAAA;;AAE3B,SAAQP,UAAU,CAACE,eAAD,CAAlB;AACD;;IAHeK,W","sourcesContent":["import { createContext, useContext } from \"react\";\r\nimport {  useState } from \"react\";\r\n\r\n\r\nexport const  PlaylistContext = createContext();\r\n\r\n\r\n\r\nexport function PlaylistContextProvider({children}){\r\n  const [modal,setmodal] = useState(false);\r\n  \r\n   return(\r\n    <PlaylistContext.Provider value ={{modal,setmodal}}>\r\n    {children}\r\n   </PlaylistContext.Provider>\r\n );\r\n\r\n}\r\n\r\n\r\nexport function usePlaylist(){\r\n\r\n  return  useContext(PlaylistContext);\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}