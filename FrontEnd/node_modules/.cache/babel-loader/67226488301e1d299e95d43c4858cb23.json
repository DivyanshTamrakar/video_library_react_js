{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github Local Repositries path\\\\video_library_react_js\\\\FrontEnd\\\\src\\\\Component\\\\WatchVideo.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { useParams, Link } from 'react-router-dom';\nimport { useHistory } from '../Context/HistoryContext';\nimport { arr } from \"../Utils/dataArray\";\nimport { getData } from \"../Utils/fetchApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WatchVideo() {\n  _s();\n\n  let {\n    videoId\n  } = useParams();\n  let data;\n  const {\n    itemInhistoy,\n    setIteminhistory\n  } = useHistory();\n  useEffect(() => {\n    getVideo();\n  }, []);\n\n  async function getVideo() {\n    try {\n      let response = await getData(`/videos/${videoId}`);\n      let result = response.video;\n      data = result;\n      console.log(data.url);\n    } catch (e) {\n      console.error(e);\n    }\n  } // find by videoId from data and the data is come from database not from stete which we used to do earlier .\n  // const result  = arr.find(element => element.videoid === videoId);\n  // let recomend = result.recommmend;\n  // // Add this data to history context\n  // useEffect(()=>{\n  //   setIteminhistory([...itemInhistoy,result]);\n  //   console.log(itemInhistoy.length);\n  // },[]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"WatchVideoPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-section\",\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        playing: true,\n        url: `${data.url}`,\n        controls: true,\n        height: \"413px\",\n        width: \"729px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"rgb(54,139,188)\"\n        },\n        children: data.hashtag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: 'inline'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [data.views, \" views\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"\\u2022\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: data.releaseDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-section\",\n      children: data.recomend.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"chip\",\n          children: [\" \", item, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_s(WatchVideo, \"XHiJijxRohsdGETXuCRWwG5lbUM=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = WatchVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WatchVideo\");","map":{"version":3,"sources":["G:/Github Local Repositries path/video_library_react_js/FrontEnd/src/Component/WatchVideo.js"],"names":["useEffect","useState","ReactPlayer","useParams","Link","useHistory","arr","getData","WatchVideo","videoId","data","itemInhistoy","setIteminhistory","getVideo","response","result","video","console","log","url","e","error","color","hashtag","title","display","views","releaseDate","recomend","map","item"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,SAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAGA,eAAe,SAASC,UAAT,GAAqB;AAAA;;AAChC,MAAI;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA3B;AACA,MAAIO,IAAJ;AACA,QAAM;AAACC,IAAAA,YAAD;AAAcC,IAAAA;AAAd,MAAmCP,UAAU,EAAnD;AAGAL,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,QAAQ;AACX,GAFU,EAET,EAFS,CAAT;;AAKF,iBAAeA,QAAf,GAAyB;AACrB,QAAG;AACC,UAAIC,QAAQ,GAAI,MAAMP,OAAO,CAAE,WAAUE,OAAQ,EAApB,CAA7B;AACA,UAAIM,MAAM,GAAGD,QAAQ,CAACE,KAAtB;AACAN,MAAAA,IAAI,GAAGK,MAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACS,GAAjB;AACH,KALD,CAKC,OAAMC,CAAN,EAAQ;AACLH,MAAAA,OAAO,CAACI,KAAR,CAAcD,CAAd;AACH;AACJ,GApBiC,CAwBhC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAUA,sBAEQ;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACD;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,IAAtB;AAA4B,QAAA,GAAG,EAAG,GAAEV,IAAI,CAACS,GAAI,EAA7C;AAAgD,QAAA,QAAQ,EAAE,IAA1D;AAAgE,QAAA,MAAM,EAAC,OAAvE;AAA+E,QAAA,KAAK,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,cADA,eAEC;AAAO,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAC;AAAP,SAAd;AAAA,kBAA0CZ,IAAI,CAACa;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAA,kBAAKb,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,OAAO,EAAC;AAAT,SAAb;AAAA,gCACA;AAAA,qBAAQf,IAAI,CAACgB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA,oBAAQhB,IAAI,CAACiB;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAYH;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBAGCjB,IAAI,CAACkB,QAAL,CAAcC,GAAd,CAAkB,UAASC,IAAT,EAAc;AAAE,4BACrC;AAAK,UAAA,KAAK,EAAC,MAAX;AAAA,0BAAoBA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADqC;AAE/B,OAFH;AAHD;AAAA;AAAA;AAAA;AAAA,YAZG;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAsDH;;GAhGuBtB,U;UACFL,S,EAEuBE,U;;;KAHrBG,U","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport { useHistory } from '../Context/HistoryContext';\r\nimport { arr } from \"../Utils/dataArray\";\r\nimport { getData } from \"../Utils/fetchApi\";\r\n\r\n\r\nexport default function WatchVideo(){\r\n    let { videoId } = useParams();\r\n    let data ; \r\n    const {itemInhistoy,setIteminhistory,} = useHistory();\r\n    \r\n\r\n    useEffect(()=>{\r\n      getVideo();\r\n  },[]);\r\n\r\n\r\n  async function getVideo(){\r\n      try{\r\n          let response  = await getData(`/videos/${videoId}`);\r\n          let result = response.video;\r\n          data = result;\r\n          console.log(data.url);\r\n      }catch(e){\r\n          console.error(e);\r\n      }\r\n  }\r\n\r\n\r\n\r\n    // find by videoId from data and the data is come from database not from stete which we used to do earlier .\r\n    // const result  = arr.find(element => element.videoid === videoId);\r\n    // let recomend = result.recommmend;\r\n    \r\n    // // Add this data to history context\r\n    // useEffect(()=>{\r\n    //   setIteminhistory([...itemInhistoy,result]);\r\n    //   console.log(itemInhistoy.length);\r\n    // },[]);\r\n  \r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n            <div className=\"WatchVideoPage\">\r\n           <div className=\"left-section\">\r\n           <ReactPlayer playing={true} url={`${data.url}`} controls={true} height=\"413px\" width=\"729px\"/>\r\n            <small style={{color:\"rgb(54,139,188)\"}}>{data.hashtag}</small>\r\n            <h2>{data.title}</h2>\r\n            <span style={{display:'inline'}}>\r\n            <small>{data.views} views</small>\r\n            <small>â€¢</small>\r\n            <small>{data.releaseDate}</small>\r\n            </span>\r\n           </div>\r\n\r\n         <div className=\"right-section\">\r\n\r\n\r\n         {data.recomend.map(function(item){ return (\r\n       <div class=\"chip\"> {item} </div>\r\n         ); })}\r\n  \r\n  \r\n  \r\n  \r\n         {/* <div className=\"history-left-watch\">\r\n\r\n             <div style={{textAlign:\"left\"}}>\r\n          </div>{\r\n\r\n\r\n           data.map(function(item){\r\n                return(\r\n                  <Link to={`/watch/${ item.videoid}`} >\r\n                     <div key={item.id} className=\"history-card-watch\">\r\n                     <span>\r\n                     <ReactPlayer url={`${item.url}`} width=\"150px\" height=\"100px\"/>\r\n                     </span>\r\n                     <div className=\"history-detail-watch\">\r\n                     {item.title}\r\n                     </div>\r\n                    \r\n                     </div>\r\n                     </Link>\r\n                );\r\n                \r\n                \r\n                })}</div> */}\r\n         </div>\r\n            </div>\r\n        \r\n    \r\n        \r\n\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}