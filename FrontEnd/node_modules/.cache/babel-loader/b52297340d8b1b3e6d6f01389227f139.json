{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github Local Repositries path\\\\video_library_react_js\\\\FrontEnd\\\\src\\\\Context\\\\LoginContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useContext, useState } from \"react\";\nimport { postData, getData } from \"../Utils/fetchApi\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvieder({\n  children\n}) {\n  _s();\n\n  const [login, setlogin] = useState(false);\n\n  async function RegisterWithCredential(name, email, password, mobile) {\n    const body = {\n      name: name,\n      email: email,\n      password: password\n    };\n\n    try {\n      let response = await postData(body, '/users/signin');\n      console.log(response);\n\n      if (response['success'] === true) {\n        setlogin(true);\n        localStorage.setItem('userId', response['user']['uid']);\n        localStorage.setItem('name', response['user']['name']);\n        return toast.success(response.message);\n      } else {\n        return toast.error(response.message);\n      }\n    } catch (e) {\n      console.error(\"Error in AuhtContext \", e);\n    }\n  }\n\n  async function LoginWithCredential(email, password) {\n    const body = {\n      email: email,\n      password: password\n    };\n\n    try {\n      let response = await postData(body, '/users/signin');\n      console.log(response);\n\n      if (response['success'] === true) {\n        setlogin(true);\n        localStorage.setItem('userId', response['user']['uid']);\n        localStorage.setItem('name', response['user']['name']);\n        return toast.success(response.message);\n      } else {\n        return toast.error(response.message);\n      }\n    } catch (e) {\n      console.error(\"Error in AuhtContext \", e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      LoginWithCredential,\n      setlogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvieder, \"Lm3qrKgidLTpzAXRy5sfVG1HkiY=\");\n\n_c = AuthProvieder;\nexport function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvieder\");","map":{"version":3,"sources":["G:/Github Local Repositries path/video_library_react_js/FrontEnd/src/Context/LoginContext.js"],"names":["axios","createContext","useContext","useState","postData","getData","toast","AuthContext","AuthProvieder","children","login","setlogin","RegisterWithCredential","name","email","password","mobile","body","response","console","log","localStorage","setItem","success","message","error","e","LoginWithCredential","useAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { postData,getData } from \"../Utils/fetchApi\";\r\nimport {  toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvieder({children}){\r\n\r\n    const [login,setlogin] = useState(false);\r\n    async function RegisterWithCredential(name,email, password,mobile){\r\n      const body = {\r\n        name:name,\r\n       email :email, \r\n       password : password,\r\n     }\r\n     try{\r\n       let response = await postData(body,'/users/signin');\r\n       console.log(response);\r\n       if(response['success'] === true){\r\n        setlogin(true);\r\n        localStorage.setItem('userId',response['user']['uid']);\r\n        localStorage.setItem('name',response['user']['name']);\r\n        return toast.success(response.message);\r\n     }\r\n     else{\r\n         return toast.error(response.message);\r\n     }\r\n   }catch(e){\r\n       console.error(\"Error in AuhtContext \" , e);\r\n     }\r\n     }\r\n\r\n    \r\n    async function LoginWithCredential(email, password){\r\n        const body = {\r\n         email :email, \r\n         password : password,\r\n       }\r\n       try{\r\n         let response = await postData(body,'/users/signin');\r\n         console.log(response);\r\n         if(response['success'] === true){\r\n          setlogin(true);\r\n          localStorage.setItem('userId',response['user']['uid']);\r\n          localStorage.setItem('name',response['user']['name']);\r\n          return toast.success(response.message);\r\n       }\r\n       else{\r\n           return toast.error(response.message);\r\n       }\r\n     }catch(e){\r\n         console.error(\"Error in AuhtContext \" , e);\r\n       }\r\n       }\r\n\r\n    return (\r\n    <AuthContext.Provider value = {{login,LoginWithCredential,setlogin}}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function useAuth(){\r\n   return useContext(AuthContext);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}