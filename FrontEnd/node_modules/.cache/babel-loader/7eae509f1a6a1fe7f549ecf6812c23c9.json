{"ast":null,"code":"var _jsxFileName = \"G:\\\\Github Local Repositries path\\\\video_library_react_js\\\\FrontEnd\\\\src\\\\Context\\\\LoginContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport \"../AxiosCall/fetchApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvieder({\n  children\n}) {\n  _s();\n\n  const [login, setlogin] = useState(false);\n\n  async function LoginWithCredential(email, password) {\n    // if(email === \"Divyansh\" && password === \"123\")\n    // {\n    //  setlogin(true);\n    // localStorage.setItem('isuserlogin',true);\n    // return true\n    // }else{\n    //  return console.log(\"credentials are wrong\");\n    // }\n    const body = {\n      email: email,\n      password: password\n    };\n\n    try {\n      let response = await postData(body, `/users/signin`);\n      console.log(response);\n\n      if (response['success'] === true) {\n        //   setLogin(true);\n        console.log(response['user']['uid']);\n        localStorage.setItem('userId', response['user']['uid']);\n        localStorage.setItem('name', response['user']['name']); // navigate(state?.from ? state.from:\"/\");\n\n        toast.success(response.message);\n      } else {\n        toast.error(response.message);\n      }\n    } catch (e) {\n      console.error(\"Error in AuhtContext \", e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      login,\n      LoginWithCredential,\n      setlogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthProvieder, \"Lm3qrKgidLTpzAXRy5sfVG1HkiY=\");\n\n_c = AuthProvieder;\nexport function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n}\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvieder\");","map":{"version":3,"sources":["G:/Github Local Repositries path/video_library_react_js/FrontEnd/src/Context/LoginContext.js"],"names":["createContext","useContext","useState","AuthContext","AuthProvieder","children","login","setlogin","LoginWithCredential","email","password","body","response","postData","console","log","localStorage","setItem","toast","success","message","error","e","useAuth"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAiB,uBAAjB;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,OAAO,SAASI,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAkC;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,KAAD,CAAjC;;AAEA,iBAAeM,mBAAf,CAAmCC,KAAnC,EAA0CC,QAA1C,EAAmD;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,IAAI,GAAG;AACZF,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,QAAQ,EAAGA;AAFC,KAAb;;AAID,QAAG;AACD,UAAIE,QAAQ,GAAG,MAAMC,QAAQ,CAACF,IAAD,EAAQ,eAAR,CAA7B;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,UAAGA,QAAQ,CAAC,SAAD,CAAR,KAAwB,IAA3B,EAAgC;AACjC;AACEE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAC,MAAD,CAAR,CAAiB,KAAjB,CAAZ;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BL,QAAQ,CAAC,MAAD,CAAR,CAAiB,KAAjB,CAA9B;AACAI,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BL,QAAQ,CAAC,MAAD,CAAR,CAAiB,MAAjB,CAA5B,EAJ+B,CAKhC;;AACAM,QAAAA,KAAK,CAACC,OAAN,CAAcP,QAAQ,CAACQ,OAAvB;AACD,OAPC,MAQE;AACAF,QAAAA,KAAK,CAACG,KAAN,CAAYT,QAAQ,CAACQ,OAArB;AACH;AACF,KAdC,CAcD,OAAME,CAAN,EAAQ;AACLR,MAAAA,OAAO,CAACO,KAAR,CAAc,uBAAd,EAAwCC,CAAxC;AACD;AACA;;AAEJ,sBACA,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAAChB,MAAAA,KAAD;AAAOE,MAAAA,mBAAP;AAA2BD,MAAAA;AAA3B,KAA/B;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GA1CeD,a;;KAAAA,a;AA8ChB,OAAO,SAASmB,OAAT,GAAkB;AAAA;;AACtB,SAAOtB,UAAU,CAACE,WAAD,CAAjB;AACF;;IAFeoB,O","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\nimport {  } from \"../AxiosCall/fetchApi\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvieder({children}){\r\n\r\n    const [login,setlogin] = useState(false);\r\n    \r\n    async function LoginWithCredential(email, password){\r\n        // if(email === \"Divyansh\" && password === \"123\")\r\n        // {\r\n        //  setlogin(true);\r\n        // localStorage.setItem('isuserlogin',true);\r\n        // return true\r\n        // }else{\r\n        //  return console.log(\"credentials are wrong\");\r\n        // }\r\n\r\n        const body = {\r\n         email :email, \r\n         password : password,\r\n       }\r\n       try{\r\n         let response = await postData(body, `/users/signin`);\r\n         console.log(response)\r\n         if(response['success'] === true){\r\n        //   setLogin(true);\r\n          console.log(response['user']['uid']);\r\n          localStorage.setItem('userId',response['user']['uid']);\r\n          localStorage.setItem('name',response['user']['name']);\r\n         // navigate(state?.from ? state.from:\"/\");\r\n         toast.success(response.message);\r\n       }\r\n       else{\r\n           toast.error(response.message);\r\n       }\r\n     }catch(e){\r\n         console.error(\"Error in AuhtContext \" , e);\r\n       }\r\n       }\r\n\r\n    return (\r\n    <AuthContext.Provider value = {{login,LoginWithCredential,setlogin}}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function useAuth(){\r\n   return useContext(AuthContext);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}